// An if-then-else statement
fun (If cond if_true if_false) {
  (If #0 ~       if_false) = if_false
  (If  ~ if_true ~       ) = if_true
}

ctr {Empty}
ctr {Entry key val rest}

// Inserts a key-val pair on a list
fun (Insert key val list) {
  (Insert key val {Empty}) =
    {Entry key val {Empty}}

  (Insert key val {Entry k v xs}) =
    dup key0 key1 = key;
    dup k0   k1   = k;
    (Insert_Aux (== key0 k0) key1 val k1 v xs)
}

// Insert's auxiliary function
fun (Insert_Aux cond key val k v xs) {
  (Insert_Aux #0 key val k v xs) = {Entry k v (Insert key val xs)}
  (Insert_Aux #1 key val ~ ~ xs) = {Entry key val xs}
}

run {
  !done
    (Insert #2 #200
    (Insert #7 #100
    {Empty}))
}
